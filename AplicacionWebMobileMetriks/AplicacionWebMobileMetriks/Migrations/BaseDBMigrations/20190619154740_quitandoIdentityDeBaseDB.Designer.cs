// <auto-generated />
using System;
using AplicacionWebMobileMetriks.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AplicacionWebMobileMetriks.Migrations.BaseDBMigrations
{
    [DbContext(typeof(BaseDB))]
    [Migration("20190619154740_quitandoIdentityDeBaseDB")]
    partial class quitandoIdentityDeBaseDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AplicacionWebMobileMetriks.Models.Emisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Calle")
                        .IsRequired();

                    b.Property<int>("CodigoPostal");

                    b.Property<string>("Colonia")
                        .IsRequired();

                    b.Property<string>("Correo")
                        .IsRequired();

                    b.Property<string>("Curp")
                        .IsRequired();

                    b.Property<Guid>("EmpresaId");

                    b.Property<string>("Estado")
                        .IsRequired();

                    b.Property<string>("Imagen");

                    b.Property<string>("Localidad");

                    b.Property<string>("Municipio")
                        .IsRequired();

                    b.Property<int>("NumExterior");

                    b.Property<int>("NumInterior");

                    b.Property<string>("Pais")
                        .IsRequired();

                    b.Property<string>("Referencia");

                    b.Property<string>("Telefono")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("emisor");
                });

            modelBuilder.Entity("AplicacionWebMobileMetriks.Models.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.Property<string>("RFC")
                        .IsRequired();

                    b.Property<string>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("AplicacionWebMobileMetriks.Models.UsuarioDeLaAplicacion", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("AdministradorId");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("IdAdministrador");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Nombre");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.ToTable("UsuarioDeLaAplicacion");
                });

            modelBuilder.Entity("AplicacionWebMobileMetriks.Models.Emisor", b =>
                {
                    b.HasOne("AplicacionWebMobileMetriks.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AplicacionWebMobileMetriks.Models.Empresa", b =>
                {
                    b.HasOne("AplicacionWebMobileMetriks.Models.UsuarioDeLaAplicacion", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AplicacionWebMobileMetriks.Models.UsuarioDeLaAplicacion", b =>
                {
                    b.HasOne("AplicacionWebMobileMetriks.Models.UsuarioDeLaAplicacion", "Administrador")
                        .WithMany()
                        .HasForeignKey("AdministradorId");
                });
#pragma warning restore 612, 618
        }
    }
}
